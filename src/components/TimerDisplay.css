.base-timer {
  position: relative;
  height: 15rem;
  width: 15rem;
  margin-top: 1rem;
}

.base-timer__circle {
  fill: none;
  stroke: none;
}

/* The SVG path that displays the timer's progress */
.base-timer__path-elapsed {
  stroke-width: 7px;
  stroke: #31393c;
}

.base-timer-label {
  position: absolute;
  display: flex;
  flex-direction: column;

  /* Size should match the parent container */
  width: 300px;
  height: 300px;

  /* Keep the label aligned to the top */
  top: 0;
  transform: translate(-8%, -15%);
  /* Create a flexible box that centers content vertically and horizontally */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Sort of an arbitrary number; adjust to your liking */
  font-size: 48px;
}

.time__left {
  font-size: 3rem;
  margin-top: 2rem;
}

.time__type {
  font-size: 2rem;
}

.base-timer__path-remaining {
  /* Just as thick as the original ring */
  stroke-width: 7px;

  /* Rounds the line endings to create a seamless circle */
  stroke-linecap: round;

  /* Makes sure the animation starts at the top of the circle */
  transform: rotate(90deg);
  transform-origin: center;

  /* One second aligns with the speed of the countdown timer */
  transition: 1s linear all;

  /* Allows the ring to change color when the color value updates */
  stroke: currentColor;
}

.base-timer__svg {
  /* Flips the svg and makes the animation to move left-to-right */
  transform: scaleX(-1);
}

@media only screen and (max-width: 390px) {
  .base-timer {
    height: 12rem;
    width: 12rem;
    margin-top: 0.5rem;
  }
  .time__left {
    font-size: 2rem;
  }
  .time__type {
    font-size: 2rem;
  }
  .base-timer-label {
    transform: translate(-17%, -23%);
  }
}